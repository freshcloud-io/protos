/**
 * @fileoverview gRPC-Web generated client stub for freshcloud
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: freshcloud.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as freshcloud_pb from './freshcloud_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class FreshcloudClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateApp = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/CreateApp',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.CreateAppRequest,
    freshcloud_pb.CreateAppResponse,
    (request: freshcloud_pb.CreateAppRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.CreateAppResponse.deserializeBinary
  );

  createApp(
    request: freshcloud_pb.CreateAppRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.CreateAppResponse>;

  createApp(
    request: freshcloud_pb.CreateAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.CreateAppResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.CreateAppResponse>;

  createApp(
    request: freshcloud_pb.CreateAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.CreateAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/CreateApp',
        request,
        metadata || {},
        this.methodDescriptorCreateApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/CreateApp',
    request,
    metadata || {},
    this.methodDescriptorCreateApp);
  }

  methodDescriptorStopApp = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/StopApp',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.StopAppRequest,
    freshcloud_pb.StopAppResponse,
    (request: freshcloud_pb.StopAppRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.StopAppResponse.deserializeBinary
  );

  stopApp(
    request: freshcloud_pb.StopAppRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.StopAppResponse>;

  stopApp(
    request: freshcloud_pb.StopAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.StopAppResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.StopAppResponse>;

  stopApp(
    request: freshcloud_pb.StopAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.StopAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/StopApp',
        request,
        metadata || {},
        this.methodDescriptorStopApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/StopApp',
    request,
    metadata || {},
    this.methodDescriptorStopApp);
  }

  methodDescriptorDeleteApp = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/DeleteApp',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.DeleteAppRequest,
    freshcloud_pb.DeleteAppResponse,
    (request: freshcloud_pb.DeleteAppRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.DeleteAppResponse.deserializeBinary
  );

  deleteApp(
    request: freshcloud_pb.DeleteAppRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.DeleteAppResponse>;

  deleteApp(
    request: freshcloud_pb.DeleteAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.DeleteAppResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.DeleteAppResponse>;

  deleteApp(
    request: freshcloud_pb.DeleteAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.DeleteAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/DeleteApp',
        request,
        metadata || {},
        this.methodDescriptorDeleteApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/DeleteApp',
    request,
    metadata || {},
    this.methodDescriptorDeleteApp);
  }

  methodDescriptorLogsApp = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/LogsApp',
    grpcWeb.MethodType.SERVER_STREAMING,
    freshcloud_pb.LogsAppRequest,
    freshcloud_pb.LogsAppResponse,
    (request: freshcloud_pb.LogsAppRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.LogsAppResponse.deserializeBinary
  );

  logsApp(
    request: freshcloud_pb.LogsAppRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<freshcloud_pb.LogsAppResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/freshcloud.Freshcloud/LogsApp',
      request,
      metadata || {},
      this.methodDescriptorLogsApp);
  }

  methodDescriptorListApps = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/ListApps',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    freshcloud_pb.ListAppsResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    freshcloud_pb.ListAppsResponse.deserializeBinary
  );

  listApps(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.ListAppsResponse>;

  listApps(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.ListAppsResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.ListAppsResponse>;

  listApps(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.ListAppsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/ListApps',
        request,
        metadata || {},
        this.methodDescriptorListApps,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/ListApps',
    request,
    metadata || {},
    this.methodDescriptorListApps);
  }

  methodDescriptorDeployApp = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/DeployApp',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.DeployAppRequest,
    freshcloud_pb.DeployAppResponse,
    (request: freshcloud_pb.DeployAppRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.DeployAppResponse.deserializeBinary
  );

  deployApp(
    request: freshcloud_pb.DeployAppRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.DeployAppResponse>;

  deployApp(
    request: freshcloud_pb.DeployAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.DeployAppResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.DeployAppResponse>;

  deployApp(
    request: freshcloud_pb.DeployAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.DeployAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/DeployApp',
        request,
        metadata || {},
        this.methodDescriptorDeployApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/DeployApp',
    request,
    metadata || {},
    this.methodDescriptorDeployApp);
  }

  methodDescriptorGetValueDictionary = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/GetValueDictionary',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.GetValueDictionaryRequest,
    freshcloud_pb.GetValueDictionaryResponse,
    (request: freshcloud_pb.GetValueDictionaryRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.GetValueDictionaryResponse.deserializeBinary
  );

  getValueDictionary(
    request: freshcloud_pb.GetValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.GetValueDictionaryResponse>;

  getValueDictionary(
    request: freshcloud_pb.GetValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.GetValueDictionaryResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.GetValueDictionaryResponse>;

  getValueDictionary(
    request: freshcloud_pb.GetValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.GetValueDictionaryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/GetValueDictionary',
        request,
        metadata || {},
        this.methodDescriptorGetValueDictionary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/GetValueDictionary',
    request,
    metadata || {},
    this.methodDescriptorGetValueDictionary);
  }

  methodDescriptorExistsValueDictionary = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/ExistsValueDictionary',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.ExistsValueDictionaryRequest,
    freshcloud_pb.ExistsValueDictionaryResponse,
    (request: freshcloud_pb.ExistsValueDictionaryRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.ExistsValueDictionaryResponse.deserializeBinary
  );

  existsValueDictionary(
    request: freshcloud_pb.ExistsValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.ExistsValueDictionaryResponse>;

  existsValueDictionary(
    request: freshcloud_pb.ExistsValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.ExistsValueDictionaryResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.ExistsValueDictionaryResponse>;

  existsValueDictionary(
    request: freshcloud_pb.ExistsValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.ExistsValueDictionaryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/ExistsValueDictionary',
        request,
        metadata || {},
        this.methodDescriptorExistsValueDictionary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/ExistsValueDictionary',
    request,
    metadata || {},
    this.methodDescriptorExistsValueDictionary);
  }

  methodDescriptorPutValueDictionary = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/PutValueDictionary',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.PutValueDictionaryRequest,
    freshcloud_pb.PutValueDictionaryResponse,
    (request: freshcloud_pb.PutValueDictionaryRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.PutValueDictionaryResponse.deserializeBinary
  );

  putValueDictionary(
    request: freshcloud_pb.PutValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.PutValueDictionaryResponse>;

  putValueDictionary(
    request: freshcloud_pb.PutValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.PutValueDictionaryResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.PutValueDictionaryResponse>;

  putValueDictionary(
    request: freshcloud_pb.PutValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.PutValueDictionaryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/PutValueDictionary',
        request,
        metadata || {},
        this.methodDescriptorPutValueDictionary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/PutValueDictionary',
    request,
    metadata || {},
    this.methodDescriptorPutValueDictionary);
  }

  methodDescriptorDeleteValueDictionary = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/DeleteValueDictionary',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.DeleteValueDictionaryRequest,
    freshcloud_pb.DeleteValueDictionaryResponse,
    (request: freshcloud_pb.DeleteValueDictionaryRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.DeleteValueDictionaryResponse.deserializeBinary
  );

  deleteValueDictionary(
    request: freshcloud_pb.DeleteValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.DeleteValueDictionaryResponse>;

  deleteValueDictionary(
    request: freshcloud_pb.DeleteValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.DeleteValueDictionaryResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.DeleteValueDictionaryResponse>;

  deleteValueDictionary(
    request: freshcloud_pb.DeleteValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.DeleteValueDictionaryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/DeleteValueDictionary',
        request,
        metadata || {},
        this.methodDescriptorDeleteValueDictionary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/DeleteValueDictionary',
    request,
    metadata || {},
    this.methodDescriptorDeleteValueDictionary);
  }

  methodDescriptorPopValueDictionary = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/PopValueDictionary',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.PopValueDictionaryRequest,
    freshcloud_pb.PopValueDictionaryResponse,
    (request: freshcloud_pb.PopValueDictionaryRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.PopValueDictionaryResponse.deserializeBinary
  );

  popValueDictionary(
    request: freshcloud_pb.PopValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.PopValueDictionaryResponse>;

  popValueDictionary(
    request: freshcloud_pb.PopValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.PopValueDictionaryResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.PopValueDictionaryResponse>;

  popValueDictionary(
    request: freshcloud_pb.PopValueDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.PopValueDictionaryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/PopValueDictionary',
        request,
        metadata || {},
        this.methodDescriptorPopValueDictionary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/PopValueDictionary',
    request,
    metadata || {},
    this.methodDescriptorPopValueDictionary);
  }

  methodDescriptorLengthDictionary = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/LengthDictionary',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.LengthDictionaryRequest,
    freshcloud_pb.LengthDictionaryResponse,
    (request: freshcloud_pb.LengthDictionaryRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.LengthDictionaryResponse.deserializeBinary
  );

  lengthDictionary(
    request: freshcloud_pb.LengthDictionaryRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.LengthDictionaryResponse>;

  lengthDictionary(
    request: freshcloud_pb.LengthDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.LengthDictionaryResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.LengthDictionaryResponse>;

  lengthDictionary(
    request: freshcloud_pb.LengthDictionaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.LengthDictionaryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/LengthDictionary',
        request,
        metadata || {},
        this.methodDescriptorLengthDictionary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/LengthDictionary',
    request,
    metadata || {},
    this.methodDescriptorLengthDictionary);
  }

  methodDescriptorProduceValueQueue = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/ProduceValueQueue',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.ProduceValueQueueRequest,
    freshcloud_pb.ProduceValueQueueResponse,
    (request: freshcloud_pb.ProduceValueQueueRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.ProduceValueQueueResponse.deserializeBinary
  );

  produceValueQueue(
    request: freshcloud_pb.ProduceValueQueueRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.ProduceValueQueueResponse>;

  produceValueQueue(
    request: freshcloud_pb.ProduceValueQueueRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.ProduceValueQueueResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.ProduceValueQueueResponse>;

  produceValueQueue(
    request: freshcloud_pb.ProduceValueQueueRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.ProduceValueQueueResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/ProduceValueQueue',
        request,
        metadata || {},
        this.methodDescriptorProduceValueQueue,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/ProduceValueQueue',
    request,
    metadata || {},
    this.methodDescriptorProduceValueQueue);
  }

  methodDescriptorConsumeValuesQueue = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/ConsumeValuesQueue',
    grpcWeb.MethodType.SERVER_STREAMING,
    freshcloud_pb.ConsumeValuesQueueRequest,
    freshcloud_pb.ConsumeValuesQueueResponse,
    (request: freshcloud_pb.ConsumeValuesQueueRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.ConsumeValuesQueueResponse.deserializeBinary
  );

  consumeValuesQueue(
    request: freshcloud_pb.ConsumeValuesQueueRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<freshcloud_pb.ConsumeValuesQueueResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/freshcloud.Freshcloud/ConsumeValuesQueue',
      request,
      metadata || {},
      this.methodDescriptorConsumeValuesQueue);
  }

  methodDescriptorLoadSecretsFromAPI = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/LoadSecretsFromAPI',
    grpcWeb.MethodType.UNARY,
    freshcloud_pb.LoadSecretsFromAPIRequest,
    freshcloud_pb.LoadSecretsFromAPIResponse,
    (request: freshcloud_pb.LoadSecretsFromAPIRequest) => {
      return request.serializeBinary();
    },
    freshcloud_pb.LoadSecretsFromAPIResponse.deserializeBinary
  );

  loadSecretsFromAPI(
    request: freshcloud_pb.LoadSecretsFromAPIRequest,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.LoadSecretsFromAPIResponse>;

  loadSecretsFromAPI(
    request: freshcloud_pb.LoadSecretsFromAPIRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.LoadSecretsFromAPIResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.LoadSecretsFromAPIResponse>;

  loadSecretsFromAPI(
    request: freshcloud_pb.LoadSecretsFromAPIRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.LoadSecretsFromAPIResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/LoadSecretsFromAPI',
        request,
        metadata || {},
        this.methodDescriptorLoadSecretsFromAPI,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/LoadSecretsFromAPI',
    request,
    metadata || {},
    this.methodDescriptorLoadSecretsFromAPI);
  }

  methodDescriptorPing = new grpcWeb.MethodDescriptor(
    '/freshcloud.Freshcloud/Ping',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    freshcloud_pb.PingResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    freshcloud_pb.PingResponse.deserializeBinary
  );

  ping(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<freshcloud_pb.PingResponse>;

  ping(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: freshcloud_pb.PingResponse) => void): grpcWeb.ClientReadableStream<freshcloud_pb.PingResponse>;

  ping(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: freshcloud_pb.PingResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/freshcloud.Freshcloud/Ping',
        request,
        metadata || {},
        this.methodDescriptorPing,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/freshcloud.Freshcloud/Ping',
    request,
    metadata || {},
    this.methodDescriptorPing);
  }

}

